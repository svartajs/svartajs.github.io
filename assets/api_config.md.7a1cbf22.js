import{_ as a,o as s,c as n,V as e}from"./chunks/framework.d3b95951.js";const h=JSON.parse('{"title":"Configuration","description":"","frontmatter":{},"headers":[],"relativePath":"api/config.md","filePath":"api/config.md"}'),o={name:"api/config.md"},l=e(`<h1 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h1><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-8kL_w" id="tab-w6oFW3p" checked="checked"><label for="tab-w6oFW3p">svarta.config.mjs</label></div><div class="blocks"><div class="language-js vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{import(&quot;@svarta/cli&quot;).Config}</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">config</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  packageManager: </span><span style="color:#9ECBFF;">&quot;pnpm&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  routeFolder: </span><span style="color:#9ECBFF;">&quot;routes&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  minify: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  adapter: </span><span style="color:#79B8FF;">ADAPTER</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> config;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@type</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{import(&quot;@svarta/cli&quot;).Config}</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">config</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  packageManager: </span><span style="color:#032F62;">&quot;pnpm&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  routeFolder: </span><span style="color:#032F62;">&quot;routes&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  minify: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  adapter: </span><span style="color:#005CC5;">ADAPTER</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> config;</span></span></code></pre></div></div></div><h2 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-label="Permalink to &quot;Reference&quot;">​</a></h2><h3 id="routefolder" tabindex="-1"><code>routeFolder</code> <a class="header-anchor" href="#routefolder" aria-label="Permalink to &quot;\`routeFolder\`&quot;">​</a></h3><ul><li>Default: <code>&quot;routes&quot;</code></li></ul><p>The base folder from which all routes are loaded and based on.</p><h3 id="minify" tabindex="-1"><code>minify</code> <a class="header-anchor" href="#minify" aria-label="Permalink to &quot;\`minify\`&quot;">​</a></h3><ul><li>Default: <code>true</code></li></ul><p>Minifies your code to reduce bundle size.</p><h3 id="adapter" tabindex="-1"><code>adapter</code> <a class="header-anchor" href="#adapter" aria-label="Permalink to &quot;\`adapter\`&quot;">​</a></h3><p>The chosen adapter determines to which platform you want to deploy your server to. <a href="/adapters/">More info here</a>.</p><h3 id="packagemanager" tabindex="-1"><code>packageManager</code> <a class="header-anchor" href="#packagemanager" aria-label="Permalink to &quot;\`packageManager\`&quot;">​</a></h3><p>Your preferred package manager.</p><p>Allowed values: <code>npm</code>, <code>yarn</code>, <code>pnpm</code></p>`,15),p=[l];function t(r,c,i,d,u,y){return s(),n("div",null,p)}const f=a(o,[["render",t]]);export{h as __pageData,f as default};
