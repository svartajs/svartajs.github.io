import{_ as s,o as a,c as l,V as e}from"./chunks/framework.d3b95951.js";const u=JSON.parse('{"title":"Deploying on Fly.io","description":"","frontmatter":{},"headers":[],"relativePath":"deployment/fly.md","filePath":"deployment/fly.md"}'),n={name:"deployment/fly.md"},o=e(`<h1 id="deploying-on-fly-io" tabindex="-1">Deploying on Fly.io <a class="header-anchor" href="#deploying-on-fly-io" aria-label="Permalink to &quot;Deploying on Fly.io&quot;">​</a></h1><p><a href="https://hellosvarta.fly.dev/" target="_blank" rel="noreferrer">Live URL</a></p><p><a href="https://github.com/svartajs/svarta/tree/main/examples/minimal-flyio-docker" target="_blank" rel="noreferrer">Repository</a></p><hr><p>Let&#39;s setup a simple web server on <a href="https://fly.io/" target="_blank" rel="noreferrer">fly.io</a> using Docker.</p><h2 id="setup-fly-io" tabindex="-1">Setup Fly.io <a class="header-anchor" href="#setup-fly-io" aria-label="Permalink to &quot;Setup Fly.io&quot;">​</a></h2><ol><li>Create a fly.io account</li><li>Make sure the <code>flyctl</code> CLI tool is installed</li></ol><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Check out the <a href="https://fly.io/docs/hands-on/install-flyctl/" target="_blank" rel="noreferrer">fly.io Docs</a> for more information</p></div><h2 id="setup-web-server" tabindex="-1">Setup web server <a class="header-anchor" href="#setup-web-server" aria-label="Permalink to &quot;Setup web server&quot;">​</a></h2><p>Now setup a new HTTP web server using:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-49rpO" id="tab-0Lb8SUe" checked="checked"><label for="tab-0Lb8SUe">pnpm</label><input type="radio" name="group-49rpO" id="tab-GN-bXOC"><label for="tab-GN-bXOC">yarn</label><input type="radio" name="group-49rpO" id="tab-BKFOPb0"><label for="tab-BKFOPb0">npm</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">pnpm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">create</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">svarta-app</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">create</span><span style="color:#24292E;"> </span><span style="color:#032F62;">svarta-app</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">yarn</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">create</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">svarta-app</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">yarn</span><span style="color:#24292E;"> </span><span style="color:#032F62;">create</span><span style="color:#24292E;"> </span><span style="color:#032F62;">svarta-app</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">create</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">svarta-app</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">create</span><span style="color:#24292E;"> </span><span style="color:#032F62;">svarta-app</span></span></code></pre></div></div></div><p>And follow the in-terminal instructions. Select the <code>starter-http</code> template.</p><p>The template comes with a Dockerfile, so we&#39;re almost ready to go. Just one thing:</p><p>In <code>svarta.config.mjs</code> change <code>defaultPort</code> to <code>8080</code> (the default for fly.io). Else, you could change the port by using the <code>PORT</code> or <code>SVARTA_PORT</code> environment variables.</p><h2 id="create-fly-io-app" tabindex="-1">Create Fly.io app <a class="header-anchor" href="#create-fly-io-app" aria-label="Permalink to &quot;Create Fly.io app&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">flyctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">launch</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">flyctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">launch</span></span></code></pre></div><p>flyctl will detect the Dockerfile. Go through the setup and then deploy using:</p><h2 id="deploy-to-fly-io" tabindex="-1">Deploy to Fly.io <a class="header-anchor" href="#deploy-to-fly-io" aria-label="Permalink to &quot;Deploy to Fly.io&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">flyctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deploy</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">flyctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deploy</span></span></code></pre></div><p>Wait for the docker image to deploy, then your API will be deployed on [app-name].fly.dev.</p><h2 id="continuous-deployment" tabindex="-1">Continuous deployment <a class="header-anchor" href="#continuous-deployment" aria-label="Permalink to &quot;Continuous deployment&quot;">​</a></h2><h3 id="github-actions" tabindex="-1">GitHub Actions <a class="header-anchor" href="#github-actions" aria-label="Permalink to &quot;GitHub Actions&quot;">​</a></h3><ol><li>Create a access token at <a href="https://fly.io/user/personal_access_tokens" target="_blank" rel="noreferrer">https://fly.io/user/personal_access_tokens</a></li><li>Set a <code>FLY_API_TOKEN</code> secret in the GitHub repository settings</li><li>Create the following workflow file (change <code>branches</code> as needed)</li></ol><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-0U2uy" id="tab-hQVq5qD" checked="checked"><label for="tab-hQVq5qD">.github/workflows/fly.yml</label></div><div class="blocks"><div class="language-yaml vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Deploy to Fly</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">on</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">push</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">branches</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#9ECBFF;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#85E89D;">env</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">FLY_API_TOKEN</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">\${{ secrets.FLY_API_TOKEN }}</span></span>
<span class="line"><span style="color:#85E89D;">jobs</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">deploy</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Deploy app</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">runs-on</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ubuntu-latest</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">steps</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#85E89D;">uses</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">actions/checkout@v3</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#85E89D;">uses</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">superfly/flyctl-actions/setup-flyctl@master</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#85E89D;">run</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">flyctl deploy --remote-only</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Deploy to Fly</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">on</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">push</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">branches</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#032F62;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#22863A;">env</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">FLY_API_TOKEN</span><span style="color:#24292E;">: </span><span style="color:#032F62;">\${{ secrets.FLY_API_TOKEN }}</span></span>
<span class="line"><span style="color:#22863A;">jobs</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">deploy</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Deploy app</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">runs-on</span><span style="color:#24292E;">: </span><span style="color:#032F62;">ubuntu-latest</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">steps</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#22863A;">uses</span><span style="color:#24292E;">: </span><span style="color:#032F62;">actions/checkout@v3</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#22863A;">uses</span><span style="color:#24292E;">: </span><span style="color:#032F62;">superfly/flyctl-actions/setup-flyctl@master</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#22863A;">run</span><span style="color:#24292E;">: </span><span style="color:#032F62;">flyctl deploy --remote-only</span></span></code></pre></div></div></div>`,24),p=[o];function t(c,r,i,y,d,E){return a(),l("div",null,p)}const b=s(n,[["render",t]]);export{u as __pageData,b as default};
